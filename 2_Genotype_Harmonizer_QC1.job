#!/bin/bash
#PBS -l nodes=1:ppn=16
#PBS -l mem=16gb
#PBS -q sata 
#PBS -l walltime=540:00:00
#PBS -j oe

date

echo "Running on node:"
hostname
pwd

#myoutdir example:
#/stsi/raqueld/2_GH
#myinput example:
#qsub 2_Genotype_Harmonizer.job -v myinput=/gpfs/home/raqueld/mapping_MESA/mesa_genotypes-black.lifted_NCBI36_to_GRCh37.bed,myoutdir=/gpfs/home/raqueld/mapping_MESA -N 2_N_GH.mesa_genotypes-black

module load vcftools
module load samtools/1.9 # version of samtools >= 1.9 is required for running `bcftools +fixref`
module load plink2 # It's plink v1.90b3.42, temp issue on Garibaldi.


starttime=$(date +%s)

export inprefix=$(basename $myinput | sed -e 's/\.bed$//g')
export indir=$(dirname $myinput)

cd $myoutdir

#outname=$(echo $filename | sed -e 's/\.vcf.*/\.GH/g')
export outname=$(basename $myinput | sed -e 's/\.bed$/\.GH.fix.unique/g')

#export SHELL=$(type -p bash)
PLINK_FUN() {

	if [ "$1" -eq 23 ]; then
		plink --bfile $indir/$inprefix --chr $1,X --make-bed --out $inprefix.chr$1
	else
		plink --bfile $indir/$inprefix --chr $1 --make-bed --out $inprefix.chr$1
	
	fi

}
export -f PLINK_FUN


GH_FUN () {
	if [ "$1" -eq 23 ]; then
		java -Xmx16g -jar ~/bin/GenotypeHarmonizer/GenotypeHarmonizer.jar --keep --input $inprefix.chr$1 \
		--ref /gpfs/group/torkamani/shaun/1000G_VCF/ALL.chrX.phase3_shapeit2_mvncall_integrated_v1b.20130502.genotypes.vcf.gz \
		--inputType PLINK_BED --callRateFilter 0.90 --output ./$inprefix.GH.chr$1

	else
		java -Xmx16g -jar ~/bin/GenotypeHarmonizer/GenotypeHarmonizer.jar --keep --input $inprefix.chr$1 \
		--ref /gpfs/group/torkamani/shaun/1000G_VCF/ALL.chr$1.phase3_shapeit2_mvncall_integrated_v5a.20130502.genotypes.vcf.gz \
		--inputType PLINK_BED --callRateFilter 0.90 --output ./$inprefix.GH.chr$1
	fi
}

export -f GH_FUN


FIX_FUN () {

        plink --bfile $inprefix.GH.chr$1 --recode vcf bgz --keep-allele-order --set-missing-var-ids @:#\$1,\$2 --out $inprefix.GH.chr$1
        tabix -p vcf $inprefix.GH.chr$1.vcf.gz

        echo "Doing last check for allele swaps"

        bcftools +fixref $inprefix.GH.chr$1.vcf.gz -Oz -o $inprefix.GH.fix.chr$1.vcf.gz -- -f /stsi/raqueld/ref/human_g1k_v37.fasta -m flip -d
        tabix -p vcf $inprefix.GH.fix.chr$1.vcf.gz

	echo "Pick unique SNP from alleles with duplicate IDs"

	bcftools view -Ou -c 2 $inprefix.GH.fix.chr$1.vcf.gz | bcftools norm -m -any | bcftools norm -Oz -o $inprefix.GH.fix.unique.chr$1.vcf.gz -d both -f /stsi/raqueld/ref/human_g1k_v37.fasta

	echo "Convert vcf back to bed files"

	plink --vcf $inprefix.GH.fix.unique.chr$1.vcf.gz --keep-allele-order --double-id --make-bed --out $outname.chr$1 

}
export -f FIX_FUN







plinkstarttime=$(date +%s)
	parallel -j 16 PLINK_FUN ::: {1..23}
plinkendtime=$(date +%s)

GHstarttime=$(date +%s)
	parallel -j 8 GH_FUN ::: {1..23}
GHendtime=$(date +%s)

FIXstarttime=$(date +%s)
        parallel -j 16 FIX_FUN ::: {1..23}
FIXendtime=$(date +%s)


if [ -f $outname.chrlist ]; then 
	rm $outname.chrlist
fi

mergestarttime=$(date +%s)

for i in {2..23}; do

	if [ -f $outname.chr$i.bed ]; then
		echo $outname.chr$i >> $outname.chrlist
		#echo $outname.chr$i.bed >> $inprefix.chrlist
		#echo $outname.chr$i.bim >> $inprefix.chrlist
		#echo $outname.chr$i.fam >> $inprefix.chrlist
	fi

done

echo "Merging all chromosomes..."
plink --bfile $outname.chr1 --merge-list $outname.chrlist --keep-allele-order --make-bed --out ./$outname

echo "Cleaning temporary files..."

rm $inprefix.chrlist
for i in {1..23}; do

# Remove plink temporary files
        if [ -f $inprefix.chr$i.bed ]; then

                rm $inprefix.chr$i.*

        fi

# Remove GH tempoarary files
	if [ -f $inprefix.GH.chr$i.bed ]; then

		rm $inprefix.GH.chr$i.bed
		rm $inprefix.GH.chr$i.bim
		rm $inprefix.GH.chr$i.fam
	fi

# Remove before-fix recode temporary files
        if [ -f $inprefix.GH.chr$i.vcf.gz ]; then

                rm $inprefix.GH.chr$i.vcf.gz*

        fi

# Remove bcftools +fixref temporary files
        if [ -f $inprefix.GH.fix.chr$i.vcf.gz ]; then

                rm $inprefix.GH.fix.chr$i.vcf.gz*

        fi

# Remove bcftools pick-unique temporary files
        if [ -f $outname.chr$i.vcf.gz ]; then

                rm $outname.chr$i.vcf.gz*

        fi

# Remove after-fix make-bed temporary files
        if [ -f $outname.chr$i.bed ]; then

                rm $outname.chr$i.*

        fi

done

mergeendtime=$(date +%s)

#GHstarttime=$(date +%s)

#java -Xmx32g -jar ~/bin/GenotypeHarmonizer/GenotypeHarmonizer.jar --keep --input $indir/$inprefix \
#--ref /gpfs/group/torkamani/shaun/1000G_VCF/1000G_Phase3_merged_biallelic_snps_only.vcf.gz \
#--inputType PLINK_BED --output ./$outname

#GHendtime=$(date +%s)


#output example
#ARIC_PLINK_flagged_chromosomal_abnormalities_zeroed_out.GH.bed

endtime=$(date +%s)

plinkruntime=$((plinkendtime-plinkstarttime))
GHruntime=$((GHendtime-GHstarttime))
mergeruntime=$((mergeendtime-mergestarttime))
overallruntime=$((endtime-starttime))

echo "plink run time: $plinkruntime"
echo "GH run time: $GHruntime"
echo "merge run time: $mergeruntime"
echo "Overall run time: $overallruntime"
